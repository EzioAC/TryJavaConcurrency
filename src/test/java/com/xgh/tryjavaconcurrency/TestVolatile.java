package com.xgh.tryjavaconcurrency;import org.junit.jupiter.api.Test;import static java.lang.Thread.sleep;public class TestVolatile {    static int nonVolatileI = 0;    volatile static int volatileI = 0;    /**     * 保证可见性volatile-反例     */    @Test    void test1() throws InterruptedException {        Thread setThread = new Thread(new Runnable() {            @Override            public void run() {                try {                    System.out.println("setThread start");                    sleep(500);                    System.out.println("setThread before set 9999");                    nonVolatileI = 9999;                    System.out.println("setThread after set 9999");                    sleep(500);                    System.out.println("setThread end");                } catch (InterruptedException e) {                    throw new RuntimeException(e);                }            }        });        new Thread(new Runnable() {            @Override            public void run() {                while(true) {                    if (nonVolatileI == 9999) {                        System.out.println(nonVolatileI);                    }                }            }        }).start();        setThread.start();        setThread.join();    }    /**     * 保证可见性volatile-正例     * @throws InterruptedException     */    @Test    void test2() throws InterruptedException {        Thread setThread = new Thread(new Runnable() {            @Override            public void run() {                try {                    System.out.println("setThread start");                    sleep(500);                    System.out.println("setThread before set 9999");                    volatileI = 9999;                    System.out.println("setThread after set 9999");                    sleep(500);                    System.out.println("setThread end");                } catch (InterruptedException e) {                    throw new RuntimeException(e);                }            }        });        new Thread(new Runnable() {            @Override            public void run() {                while(true) {                    if (volatileI == 9999) {                        System.out.println(volatileI);                    }                }            }        }).start();        setThread.start();        setThread.join();    }}